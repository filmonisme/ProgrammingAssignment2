mean_2
mean_2 <- mean_1(!(is.na (mean_1))
mean_2
mean_2 <- mean_1(na.rm = "TRUE")
mean_2 <- mean_1[!(is.na (mean_1)]
mean_2 <- mean_1[!is.na (mean_1)]
mean_2
clc
d_data <- l_data[l_data!=0]
clc
submit()
source ("corr.R")
soruce ("complete.R")
source ("complete.R")
correlations <- vector ("numeric")
correlations
correlations <- vector ()
correlations
correlations <- vector []
correlations <- vector ()
correlations
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
corr("spectdata",150)
corr("specdata",150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
corr("specdata",150)
k<-1
correlations <- vector ("numeric")
j<-1
comp_cases <- complete(directory, j)
comp_cases <- complete("specdata", j)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
corr("specdata",150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
corr("specdata",150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
corr("specdata",150)
cr<-corr("specdata",150)
cr
head (cr)
comp_cases <- complete(directory, j)
directory<-"specdata"
getwd()
comp_cases <- complete(directory, j)
View(comp_cases)
View(comp_cases)
rr = complete(directory)
rr
j<-2
comp_cases <- complete(directory, j)
comp_cases
setwd(directory)
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
View(comp_cases)
View(comp_cases)
View(comp_data)
View(comp_data)
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
for (j in 1:332) {
comp_cases <- complete(directory, j)
if (comp_cases[2] > threshold ) {
setwd(directory)
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
getwd()
setwd(wd)
wd<-"C:/Users/fhabt003/Desktop/Coursera documents/R_directory"
setwd(wd)
getwd()
for (j in 1:332) {
comp_cases <- complete(directory, j)
setwd(directory)
if (comp_cases[2] > threshold ) {
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
threshold <-150
correlations <- integer()
correlations <- double()
wd
for (j in 1:332) {
comp_cases <- complete(directory, j)
setwd(directory)
if (comp_cases[2] > threshold ) {
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
wd
directory
setwd(directory)
cr <- corr("specdata", 150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/complete.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
getwd()
setwd("C:/Users/fhabt003/Desktop/Coursera documents/R_directory")
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
cr <- corr("specdata", 150)
getwd()
k<-1
correlations <- double()
wd <- getwd()
for (j in 1:332) {
comp_cases <- complete(directory, j)
setwd(directory)
if (comp_cases[2] > threshold ) {
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
directory = "specdata"
threshold = 2000
for (j in 1:332) {
comp_cases <- complete(directory, j)
setwd(directory)
if (comp_cases[2] > threshold ) {
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
comp_cases[2]
threshold<-1000
for (j in 1:332) {
comp_cases <- complete(directory, j)
setwd(directory)
if (comp_cases[2] > threshold ) {
num_zero <- paste(rep("0",3 - nchar(j)), collapse = "")
file_name <- paste (num_zero, as.character(j),".csv", sep="") # file name from id
curr_data  <- read.csv(file_name)   ## read file
comp_data = curr_data [complete.cases (curr_data),]
correlations [k] = cor(comp_data[,2],comp_data[,3])
k<-k+1
}
setwd(wd)
}
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/complete.R')
cr <- corr("specdata", 150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/corr.R')
cr <- corr("specdata", 150)
head (cr)
summary (cr)
cr <- corr("specdata", 400)
head (cr)
summary (cr)
cr <- corr("specdata", 5000)
summary (cr)
length (cr)
cr <- corr("specdata")
summary (cr)
length (cr)
submit()
source ("submit.R")
source("submitscript1.R")
getwd()
source("submitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
x<-list(a=1:5, b=rnorm(10))
x
x<-list(a=1:5, b=rnorm(10))
x
lapply(x,mean)
c<-lapply(x,mean)
c
c[[1]]
c$a
y<-list(a=1:4, b=rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
y
lapply(y,max)
lapply(y,mean)
x<-1:4
lapply(x,runif)
v<-marix(rnor(200),20,10)
v<-martix(rnor(200),20,10)
v<-matrix(rnor(200),20,10)
v<-matrix(rnorm(200),20,10)
v
apply(v,2,mean)
apply(v,1,sum)
rowSums(v)
colMeas(v)
colMeans(v)
apply(v,1,quantile,probs = c(0.25, 0.75))
library(datasets)
data(iris)
?iris
lapply(iris,mean)
mean(iris$Sepal.Length)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
colMeans(iris[,1:4])
library(datasets)
data(mtcars)
?mtcars
str(mapply)
str(apply)
str(lapply)
list (rep(1,4), rep(2,3), rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
noise(5,1,2)
noise<-function(n, mean, std){}
noise<-function(n, mean, std){
rnorm(n,mean,std)
}
noise(5,1,2)
mapply(noise, 1:5,1:5,2)
x <-c(rnorm(10), runif(10), rnorm(10,1))
x
f<-gl(3,10)
f
tapply(f,x,mean)
tapply(x,f,mean)
tapply(x,f,mean, simplify=FALSE)
tapply(x,f,mean, simplify='FALSE')
tapply(x,f,mean, simplify=FALSE)
tapply(x,f,RANGE)
tapply(x,f,range)
tapply(x,f,range,simplify=TRUE)
split(x,f)
lapply(split(x,f),mean)
X<-rnorm(20,4,5)
x
lapply(X,mean)
lapply(X,mean,2)
X
X<-matrix(rnorm(20),4,5)
X
lapply(X,mean)
lapply(X,mean,1)
lapply(X,mean,2)
X
mean(X)
mean(X,2)
rowMeans(X)
lapply(X,rowMeans)
lapply(X,2,mean)
apply(X,2,mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars$mpg
mtcars$cyl
?mtcars
hp_cyl<-split(mtcars$hp, mtcars$cyl)
hp_cyl
mean(hp_cyl$4)
mean(hp_cyl$'4')
mean(hp_cyl$'4') - mean(hp_cyl$'8')
debug(ls)
ls
ls(X)
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
names(outcome)
View(outcome)
View(outcome)
outcome[,11]
class(outcome[,11])
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
hist(outcome[,11],rm.na=TRUE)
hist(outcome[,11],rm.na=TRUE)
hist(outcome[,11])
View(outcome)
View(outcome)
View(outcome)
outcomeData <- read.csv("outcome-of-care-measures.csv")
View(outcomeData)
View(outcomeData)
"FL" %in% outcomeData[,7]
!("FL" %in% outcomeData[,7])
state <-DD
state <-"DD"
outcome <-"hear death"
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(',state, outcome,') : invalid state'))
}
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(',state," " outcome,') : invalid state'))
}
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(',state,' ' outcome,') : invalid state'))
}
## Check that state and outcome are valid
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(',state,' ' outcome,') : invalid state'))
}
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(', state,' ', outcome,') : invalid state'))
}
## Check that state and outcome are valid
if (!(state %in% outcomeData[,7])) {
stop(c('Error in best(', state,', ', outcome,') : invalid state'))
}
## Check that outcome are valid
if (!(outcome %in% ["heart attack", "heart failure", "pneumonia"])) {
stop(c('Error in best(', state,', ', outcome,') : invalid state'))
}
["heart attack", "heart failure", "pneumonia"]
("heart attack", "heart failure", "pneumonia")
c("heart attack", "heart failure", "pneumonia")
## Check that outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia")) {
stop(c('Error in best(', state,', ', outcome,') : invalid state'))
}
## Check that outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop(c('Error in best(', state,', ', outcome,') : invalid state'))
}
state<-FL
state<-"FL"
outcome<-"heart attack"
View(outcomeData)
View(outcomeData)
splitData <- split(outcomeData,outcomeData$State)
stateData <- splitData$state
state<-"TX"
stateData <- splitData$state
splitData
stateData <- splitData$as.character(state)
as.character(state)
state
as.string(state)
sapply(splitData,length)
sapply(splitData$TX,length)
sapply(splitData$state,length)
stateData<-splitData[state]
stateData
stateData[,7]
stateData$State
stateData[State]
stateData
stateData[7]
stateData[1:7]
stateData[1:2]
## Check that outcome are valid
if (!(outcome %in% c("heart attack", "heart failure", "pneumonia"))) {
stop(c('Error in best(', state,', ', outcome,') : invalid outcome'))
} else if (outcome == "heart attack"){
colNum = 11
}else if (outcome == "heart failure"){
colNum = 17
}else if (outcome == "pneumonia"){
colNum = 23
}
stateData[,11]
stateData[11]
stateData[[1]]
stateData[[,7]]
stateData[[7]]
lapply(stateData, "[", c("breakp.start", "breakp.end"))
lapply(stateData, `[`, i =, j = 1)
lapply(stateData, `[`, i =, j = )
stateData[,11]
stateData[[,11]]
stateData[[11]]
stateData[State]
stateData$State
stateData$ State
outcomeData$State
stateData <- as.list(splitData[state])
stateData$State
stateData$Hospital.Name
newdata <- outcomeData[ which(mydata$gender==state)]
newdata <- outcomeData[ which(outcomeData$gender==state)]
newdata <- outcomeData[ which(outcomeData$State==state)]
outcomeData$State
stateData <- as.dataframe(splitData[state])
newdata <- outcomeData[ which(outcomeData$State==state)]
search()
f<-function(x,y){}
f<-function(x,y){
x^2 + y /z
}
make.power<-function(n){}
make.power<-function(n){
pow <-funtion(x){
make.power<-function(n){
pow <-function(x){
x^n
}
pow
}
cube <-make.power(3)
cube
cube(5)
squre <-make.power(2)
square (10)
squre (10)
ls (environment (cube))
get("n")
get("n",environment(cube))
source("cachematrix.R")
getwd()
getwd()
setwd("C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2")
getwd()
source("cachematrix.R")
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
cachesolve(matrix(rnorm(16),4,4))
matrix(rnorm(16),4,4)
s<-matrix(rnorm(16),4,4)
s_inv = solve(s)
cacheSolve(matrix(rnorm(16),4,4))
makecacheMatrix(matrix(rnorm(16),4,4))
makeCacheMatrix(matrix(rnorm(16),4,4))
x_inv$getinverse
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachemean.R')
cachemean(1:200)
cachemean([1:200])
x$getmean()
m_m <- cachemean(1:200)
m_m <- cachemean()
a <-makeVector(1:200)
a$get()
a$setmean()
a$getmean()
cachemean(a)
cachemean(a)
d<-makeCacheMatrix(s)
d$get
d$get()
cacheSolve(d)
cacheSolve(d)
v1<-makeVector(1:10)
v2<-makeVector(1:10)
v3<-makeVector(1:20)
v4<-makeVector(1:50)
cachemean(v1)
cachemean(v2)
cachemean(v1)
cachemean(v4)
cachemean(v3)
cachemean(v2)
cachemean(v4)
v1<-makeVector(1:10)
cachemean(v1)
v1
makeCacheMatrix(matrix(rnorm(16),4,4))
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
m1<-makeCacheMatrix(matrix(rnorm(16),4,4))
m1$get()
m1$getinverse()
m1$set(matrix(rnorm(16,4,4)))\
m1$set(matrix(rnorm(16,4,4)))
m1$get()
m1$set(matrix(rnorm(16),4,4)))
m1$set(matrix(rnorm(16),4,4))
m1$get()
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
m2<-makeCacheMatrix(rnorm(16),4,4)
m2<-makeCacheMatrix(matrix(rnorm(16),4,4))
cachesolve(m2)
cacheSolve(m2)
cacheSolve(m2)
cacheSolve(m1)
cacheSolve(m1)
cacheSolve(m1)
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/fhabt003/Desktop/Coursera documents/R_directory/ProgrammingAssignment2/cachematrix.R')
